# Generated by Django 5.1.7 on 2025-08-31 18:40

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeptoEmpresa',
            fields=[
                ('depto_id', models.AutoField(primary_key=True, serialize=False)),
                ('depto', models.CharField(db_column='depto', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(help_text='Color HEX para el texto del estado (ej: #0EA5E9)', max_length=7)),
                ('background_color', models.CharField(help_text='Color HEX para el fondo del estado (ej: #0EA5E9)', max_length=7)),
                ('prioridad', models.PositiveIntegerField(default=10, help_text='Mayor número => mayor prioridad si hay conflicto')),
                ('es_bloqueante', models.BooleanField(default=False, help_text='Si es True, este estado siempre sobreescribe cualquier otro que coincida')),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'ordering': ['-activo', '-prioridad', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Faena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True)),
                ('ubicacion', models.CharField(blank=True, max_length=200, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Faena',
                'verbose_name_plural': 'Faenas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('personal_id', models.AutoField(primary_key=True, serialize=False)),
                ('rut', models.CharField(max_length=8, unique=True)),
                ('dvrut', models.CharField(max_length=1)),
                ('nombre', models.CharField(max_length=100)),
                ('apepat', models.CharField(max_length=50)),
                ('apemat', models.CharField(max_length=50)),
                ('fechanac', models.DateField(blank=True, null=True)),
                ('correo', models.CharField(max_length=100, unique=True)),
                ('direccion', models.CharField(blank=True, max_length=150, null=True)),
                ('activo', models.BooleanField(default=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Personal',
                'verbose_name_plural': 'Personal',
                'db_table': 'personal',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoAusentismo',
            fields=[
                ('tipoausen_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(db_column='tipo', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TipoLicenciaMedica',
            fields=[
                ('tipoLicenciaMedica_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipoLicenciaMedica', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=120, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Turno',
                'verbose_name_plural': 'Turnos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('cargo_id', models.AutoField(primary_key=True, serialize=False)),
                ('cargo', models.CharField(db_column='cargo', max_length=50)),
                ('depto_id', models.ForeignKey(db_column='depto_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.deptoempresa')),
            ],
        ),
        migrations.CreateModel(
            name='EstadoFuente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo_fecha_inicio', models.CharField(default='fecha_inicio', max_length=50)),
                ('campo_fecha_fin', models.CharField(default='fecha_fin', max_length=50)),
                ('campo_personal', models.CharField(default='personal', max_length=50)),
                ('filtro_extra', models.JSONField(blank=True, null=True)),
                ('content_type', models.ForeignKey(help_text='Modelo origen (ej: Ausentismo, LicenciaMedica, etc.)', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('estado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fuente', to='calendario.estado')),
            ],
            options={
                'verbose_name': 'Fuente de Estado',
                'verbose_name_plural': 'Fuentes de Estados',
            },
        ),
        migrations.CreateModel(
            name='InfoLaboral',
            fields=[
                ('infolab_id', models.AutoField(primary_key=True, serialize=False)),
                ('fechacontrata', models.DateField()),
                ('cargo_id', models.ForeignKey(db_column='cargo_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.cargo')),
                ('depto_id', models.ForeignKey(db_column='depto_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.deptoempresa')),
                ('personal_id', models.ForeignKey(db_column='personal_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.personal')),
            ],
        ),
        migrations.CreateModel(
            name='Ausentismo',
            fields=[
                ('ausentismo_id', models.AutoField(primary_key=True, serialize=False)),
                ('fechaini', models.DateField()),
                ('fechafin', models.DateField()),
                ('observacion', models.TextField(blank=True, max_length=250, null=True)),
                ('personal_id', models.ForeignKey(db_column='personal_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.personal')),
                ('tipoausen_id', models.ForeignKey(db_column='tipoausen_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.tipoausentismo')),
            ],
        ),
        migrations.CreateModel(
            name='LicenciaMedicaPorPersonal',
            fields=[
                ('licenciaMedicaPorPersonal_id', models.AutoField(primary_key=True, serialize=False)),
                ('fechaEmision', models.DateField()),
                ('fecha_fin_licencia', models.DateField(default=datetime.datetime.now, editable=False)),
                ('observacion', models.TextField(blank=True, max_length=250, null=True)),
                ('personal_id', models.ForeignKey(db_column='personal_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.personal')),
                ('tipoLicenciaMedica_id', models.ForeignKey(db_column='tipoLicenciaMedica_id', on_delete=django.db.models.deletion.CASCADE, to='calendario.tipolicenciamedica')),
            ],
        ),
        migrations.CreateModel(
            name='TurnoBloque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.PositiveIntegerField(help_text='Posición del bloque dentro del ciclo (1..n)')),
                ('duracion_dias', models.PositiveIntegerField()),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloques_turno', to='calendario.estado')),
                ('turno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloques', to='calendario.turno')),
            ],
            options={
                'verbose_name': 'Bloque de Turno',
                'verbose_name_plural': 'Bloques de Turno',
                'ordering': ['turno', 'orden'],
                'unique_together': {('turno', 'orden')},
            },
        ),
        migrations.CreateModel(
            name='EstadoManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(db_index=True)),
                ('fecha_fin', models.DateField(db_index=True)),
                ('motivo', models.CharField(blank=True, max_length=200, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aplicaciones_manuales', to='calendario.estado')),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estados_manuales', to='calendario.personal')),
            ],
            options={
                'verbose_name': 'Estado Manual',
                'verbose_name_plural': 'Estados Manuales',
                'ordering': ['personal', 'fecha_inicio'],
                'indexes': [models.Index(fields=['personal', 'fecha_inicio', 'fecha_fin'], name='calendario__persona_2bc994_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('fecha_fin__gte', models.F('fecha_inicio'))), name='estado_manual_rango_valido')],
            },
        ),
        migrations.CreateModel(
            name='AsignacionFaena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(db_index=True)),
                ('fecha_fin', models.DateField(blank=True, db_index=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('faena', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='calendario.faena')),
                ('personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones_faena', to='calendario.personal')),
                ('turno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='calendario.turno')),
                ('bloque_inicio', models.ForeignKey(help_text='Bloque del turno desde el cual arranca el ciclo para esta persona', on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones_inicio', to='calendario.turnobloque')),
            ],
            options={
                'verbose_name': 'Asignación a Faena',
                'verbose_name_plural': 'Asignaciones a Faenas',
                'ordering': ['personal', 'fecha_inicio'],
                'indexes': [models.Index(fields=['personal', 'fecha_inicio', 'fecha_fin'], name='calendario__persona_270129_idx'), models.Index(fields=['faena', 'turno'], name='calendario__faena_i_c07882_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('fecha_fin__gte', models.F('fecha_inicio')), ('fecha_fin__isnull', True), _connector='OR'), name='asig_faena_rango_valido')],
            },
        ),
    ]
